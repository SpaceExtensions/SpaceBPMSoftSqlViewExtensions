 define("ProcessFlowElementPropertiesPage", ["SourceCodeEditEnums", "SourceCodeEdit", "ProcessModuleUtilities"],
	function(sourceCodeEditEnums) {
		return {
			modules: {
				"SqlQueryModule": {
					"config": {
						"schemaName": "SqlSourceCodeEditPage",
						"isSchemaConfigInitialized": true,
						"useHistoryState": false,
						"showMask": true,
						"autoGeneratedContainerSuffix": "-sql-query-schema",
						"parameters": {
							"viewModelConfig": {
								"Tag": "sql-query",
								"Caption": "SQL запрос"
							}
						}
					}
				},
				"SqlQueryPlanModule": {
					"config": {
						"schemaName": "SqlSourceCodeEditPage",
						"isSchemaConfigInitialized": true,
						"useHistoryState": false,
						"showMask": true,
						"autoGeneratedContainerSuffix": "-sql-query-plan-schema",
						"parameters": {
							"viewModelConfig": {
								"Tag": "sql-query-plan",
								"Caption": "План запроса"
							}
						}
					}
				}
			},
			methods: {
				onRender: function() {
					this.callParent(arguments);

					if(this.getIsEditPageDefault() || !this.isAvailableUserTask()) {
						this.hideTabByName("SqlTab", true);
						this.hideTabByName("SqlQueryPlanTab", true);
					}
				},
				
				isAvailableUserTask: function() {
					const availableUserTasks = ['cb455b6f-78ff-4b1e-b241-c2bbc0b37e9f', 'd3021ca7-7450-4678-a117-060171eb2976', '40f4a8f2-edca-432d-a5ea-03e8577b4691'];
					
					return availableUserTasks.includes(this.$ProcessElement?.managerItemUId);
				},
				
				getTabs: function() {
					var tabs = this.callParent(arguments);
					if(!this.getIsEditPageDefault()) {
						tabs.push({
							Name: "SqlTab",
							Caption: "Запрос",
							MarkerValue: "SqlTab"
						});
						tabs.push({
							Name: "SqlQueryPlanTab",
							Caption: "План запроса",
							MarkerValue: "SqlQueryPlanTab"
						});
					}					
					return tabs;
				},

				onPageModeClick: function() {
					this.callParent(arguments);
					
					if(this.get("IsExtendedMode") && (this.getIsEditPageDefault() || !this.isAvailableUserTask())) {
						this.hideTabByName("SqlTab", true);
						this.hideTabByName("SqlQueryPlanTab", true);
					}
				},

				hideTabByName: function(tabName, isHide){
					var tabsCollection = this.get("TabsCollection");
					if(tabsCollection){
						var tabIndex = tabsCollection.collection.keys.indexOf(tabName);
						var tabsPanelDomElement = document.querySelectorAll('ul[id^=Process]');
						if(tabsPanelDomElement && tabsPanelDomElement.length > 0){
							for(const child of tabsPanelDomElement[0].childNodes) {
								if(child.attributes["data-item-index"]?.value === tabIndex.toString()){
									if(isHide){
										child.style.display = "none";
									} else {
										child.style.display = null;
									}
								}
							}
						}    
					}
				},
			},
			diff: [
				{
					"operation": "insert",
					"parentName": "Tabs",
					"propertyName": "tabs",
					"name": "SqlTab",
					"values": {
						"wrapClass": ["tabs", "methods-tab"],
						"items": []
					}
				},
				{
					"operation": "insert",
					"parentName": "SqlTab",
					"propertyName": "items",
					"name": "SqlQueryModule",
					"values": {
						"itemType": BPMSoft.ViewItemType.MODULE,
						"classes": {
							"wrapClassName": "process-methods process-methods-container"
						},
						"items": []
					}
				},
				{
					"operation": "insert",
					"parentName": "Tabs",
					"propertyName": "tabs",
					"name": "SqlQueryPlanTab",
					"values": {
						"wrapClass": ["tabs", "methods-tab"],
						"items": []
					}
				},
				{
					"operation": "insert",
					"parentName": "SqlQueryPlanTab",
					"propertyName": "items",
					"name": "SqlQueryPlanModule",
					"values": {
						"itemType": BPMSoft.ViewItemType.MODULE,
						"classes": {
							"wrapClassName": "process-methods process-methods-container"
						},
						"items": []
					}
				},
			]
		};
 });